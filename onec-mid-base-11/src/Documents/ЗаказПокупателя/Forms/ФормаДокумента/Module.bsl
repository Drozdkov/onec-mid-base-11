
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	//++ 03.02.24 Доработка в рамках ДЗ №2 модуля 13 "Совместная Разработка"
	ДобавитьПолеИКомандуСкидка() ;   
    //-- 03.02.24 Доработка в рамках ДЗ №2 модуля 13 "Совместная Разработка"
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
    ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТовары

&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриИзменении(Элемент)
	РассчитатьСуммуДокумента();
КонецПроцедуры

&НаКлиенте
Процедура ТоварыСкидкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыУслуги

&НаКлиенте
Процедура УслугиКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиСкидкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиПриИзменении(Элемент)
	РассчитатьСуммуДокумента();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура РассчитатьСуммуСтроки(ТекущиеДанные)
	
	КоэффициентСкидки = 1 - ТекущиеДанные.Скидка / 100;
	ТекущиеДанные.Сумма = ТекущиеДанные.Цена * ТекущиеДанные.Количество * КоэффициентСкидки;
	
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСуммуДокумента()
	
	Объект.СуммаДокумента = Объект.Товары.Итог("Сумма") + Объект.Услуги.Итог("Сумма");
	
КонецПроцедуры

#Область ПодключаемыеКоманды

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#КонецОбласти

#Область ДоработкиКонфигурацииНаПоддержке    

&НаКлиенте
Асинх Процедура Дор_Диалог()
	
	Режим = РежимДиалогаВопрос.ДаНет;
	Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопроса", ЭтотОбъект, Параметры);
	ПоказатьВопрос(Оповещение, "Пересчитать стоимость товаров и услуг?", Режим, 0);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияВопроса(Результат, Параметры) Экспорт
	Если Результат = КодВозвратаДиалога.Нет Тогда
		Возврат; 
		Иначе Дор_ПересчитатьСУчетомСкидки();     

	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура Дор_ПересчитатьСуммуСтроки(Строка) 
	
	Строка.Сумма = Строка.Цена * Строка.Количество * (100 - Объект.СогласованнаяСкидка)/100;
	
КонецПроцедуры

&НаКлиенте
Процедура Дор_ПересчитатьСУчетомСкидки()
	
	Для каждого Строка из Объект.Товары Цикл 
		Дор_ПересчитатьСуммуСтроки(Строка); 
	КонецЦикла;  
	
	Для каждого Строка из Объект.Услуги Цикл 
		Дор_ПересчитатьСуммуСтроки(Строка); 
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаПересчитатьСУчетомСкидки()
	
	Дор_ПересчитатьСУчетомСкидки();
	
КонецПроцедуры


&НаКлиенте
Процедура Дор_СогласованнаяСкидкаПриИзмененииВместо(Элемент)
	
	Если ЗначениеЗаполнено(Объект.Товары) ИЛИ ЗначениеЗаполнено(Объект.Услуги) Тогда
		
		Дор_Диалог(); 
		
	Иначе
		
		Возврат;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьПолеИКомандуСкидка()
	
	НовыйЭлемент = Элементы.Добавить("СогласованнаяСкидка", Тип("ПолеФормы"), ЭтаФорма.Элементы.ГруппаШапкаЛево);
	НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
	НовыйЭлемент.ПутьКДанным = "Объект.СогласованнаяСкидка"; 
	НовыйЭлемент.УстановитьДействие("ПриИзменении", "СогласованнаяСкидкаПриИзмененииВместо");
	
	Команда = Команды.Добавить("ПересчитатьСУчетомСкидки");
	Команда.Заголовок = "Пересчитать с учетом скидки";
	Команда.Действие = "КомандаПересчитатьСУчетомСкидки";
	
	КнопкаФормы = Элементы.Добавить("КнопкаПересчитатьСУчетомСкидки", Тип("КнопкаФормы"), ЭтаФорма.Элементы.ГруппаШапкаЛево);
	КнопкаФормы.ИмяКоманды = "ПересчитатьСУчетомСкидки";
	КнопкаФормы.Вид = ВидКнопкиФормы.ОбычнаяКнопка;
	КнопкаФормы.ЦветФона = ЦветаСтиля.ЦветВажного;	
		
КонецПроцедуры

#КонецОбласти